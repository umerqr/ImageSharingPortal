{"version":3,"sources":["components/TopBar/index.js","components/Homepage/index.js","components/AppTextField/index.js","utils/notification.js","components/Login/index.js","App.js","reportWebVitals.js","components/Homepage/constants.js","components/Homepage/reducer.js","components/auth/reducer.js","components/ContentHomepage/reducer.js","reducers/index.js","utils/api/index.js","components/auth/actions.js","components/auth/authSaga.js","components/ContentHomepage/saga.js","rootSaga/index.js","components/auth/Auth.js","index.js","components/auth/authContext.js","components/auth/constants.js","components/ContentHomepage/constants.js","components/ContentHomepage/actions.js","components/AppButton/index.js","components/AppLabel/index.js"],"names":["TopBar","props","authState","useContext","AuthContext","AppBar","position","className","Toolbar","variant","AppButton","label","onClick","logout","ContentHomepage","lazy","Homepage","Drawer","open","role","List","map","text","index","ListItem","button","ListItemIcon","Divider","fallback","path","component","AppTextField","onFocus","name","value","stateToUpdate","placeholder","onChange","adornmentEnd","size","mainDivClassName","disabled","id","type","onBlur","autoFocus","handleChangeFields","AppLabel","TextField","e","target","InputProps","endAdornment","InputAdornment","memo","notificationWithIcon","title","message","notification","description","duration","Login","useState","email","setEmail","password","setPassword","errorMail","setErrorMail","handleSignIn","a","loginCredentials","handleLogin","Paper","elevation","required","test","String","toLowerCase","isValidEmail","App","authenticated","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DEFAULT_CONST","initialState","count","homePageReducer","state","action","produce","draft","incomingToken","userInfo","authReducer","LOGIN_SUCCESS","res","token","FETCH_USER_INFO_SUCCESS","listData","userListData","contentHomepageReducer","FETCH_LIST_DATA_SUCCESS","items","FETCH_USER_LIST_DATA_SUCCESS","rootReducer","combineReducers","postUtil","url","data","axios","post","getUtil","get","params","interceptors","response","use","error","errorMsg","status","result","require","LOGIN_ERROR","FETCH_USER_INFO","loginSuccess","loginError","err","loginFunction","fetchUserInfo","authSaga","payload","loginData","call","put","console","log","takeLatest","fetchListData","fetchUserListData","postUserListData","contentHomepageSaga","fetchListDataSuccess","fetchListDataError","fetchUserListDataSuccess","fetchUserListDataError","postObj","postListDataSuccess","postListDataError","FETCH_LIST_DATA","FETCH_USER_LIST_DATA","POST_USER_LIST_DATA","rootSaga","all","Auth","user","accessToken","setState","authReducerState","useSelector","dispatch","useDispatch","localStorage","clear","useEffect","handleAuthentication","localToken","getItem","isAutheticated","defaults","headers","common","setSession","setItem","authProviderValue","children","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById","createContext","AuthConsumer","Consumer","AuthProvider","Provider","FETCH_LIST_DATA_ERROR","FETCH_USER_LIST_DATA_ERROR","POST_USER_LIST_DATA_SUCCESS","POST_USER_LIST_DATA_ERROR","fetchListDataAction","fetchUserListDataAction","postListDataAction","src","appButtonLabelClassName","alt","defaultProps"],"mappings":"ybAuBeA,MAhBf,SAAgBC,GACd,IAAMC,EAAYC,qBAAWC,KAC7B,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAU,oBAApC,SACE,eAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,UACE,qBAAKF,UAAU,8BAAf,SACE,qBAAKA,UAAU,aAEjB,cAACG,EAAA,QAAD,CAAWC,MAAM,SAASC,QAAS,kBAAMV,EAAUW,kB,+ECHrDC,EAAkBC,gBAAK,kBAAM,uDAkDpBC,MA9Cf,SAAkBf,GAyBhB,OACE,gCACE,cAAC,EAAD,IACA,oBAAIM,UAAU,QACd,cAACU,EAAA,EAAD,CAAQR,QAAQ,YAAYS,MAAM,EAAOX,UAAS,eAAlD,SA1BF,sBAAKY,KAAK,eAAV,UACE,cAACC,EAAA,EAAD,UACG,CAAC,QAAS,UAAW,aAAc,UAAUC,KAAI,SAACC,EAAMC,GAAP,OAChD,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,UACGH,EAAQ,IAAM,EAAI,cAAC,IAAD,IAAgB,cAAC,IAAD,OAFjBD,QAO1B,cAACK,EAAA,EAAD,IACA,cAACP,EAAA,EAAD,UACG,CAAC,WAAY,QAAS,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACjC,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,UACGH,EAAQ,IAAM,EAAI,cAAC,IAAD,IAAgB,cAAC,IAAD,OAFjBD,aAgB1B,qBAAKf,UAAU,qBAAf,SACE,cAAC,IAAD,UACE,eAAC,WAAD,CAAUqB,SAAU,6CAApB,UACE,cAAC,IAAD,CAAOC,KAAK,YAAYC,UAAWhB,IACnC,cAAC,IAAD,CAAOe,KAAK,IAAIC,UAAWhB,e,6ECvCjCiB,G,OAAe,SAAC,GAiBf,IAhBLC,EAgBI,EAhBJA,QACAC,EAeI,EAfJA,KACAC,EAcI,EAdJA,MACAC,EAaI,EAbJA,cACAxB,EAYI,EAZJA,MACAJ,EAWI,EAXJA,UACA6B,EAUI,EAVJA,YACAC,EASI,EATJA,SASI,IARJC,oBAQI,SAPJC,EAOI,EAPJA,KACAC,EAMI,EANJA,iBACAC,EAKI,EALJA,SACAC,EAII,EAJJA,GACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEMC,EAAqB,SAACZ,EAAOC,GAC7BE,EACFA,EAASH,EAAOC,GAEhBA,EAAcD,IAGlB,OACE,sBAAK3B,UAAWiC,EAAhB,UACE,cAACO,EAAA,EAAD,CAAUxC,UAAU,mBAAmBI,MAAOA,IAC9C,cAACqC,EAAA,EAAD,CACEH,UAAWA,GAAaA,EACxBZ,KAAMA,EACND,QAASA,EACTzB,UAAS,+BAA0BA,GACnC2B,MAAOA,EACPO,SAAUA,EACVJ,SAAU,SAACY,GAAD,OAAOH,EAAmBG,EAAEC,OAAOhB,MAAOC,IACpDO,GAAIA,GAAE,iBACNN,YAAaA,EACbG,KAAMA,EACN9B,QAAQ,WACRkC,KAAMA,GAAQA,EACdC,OAAQA,GAAUA,EAClBO,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgB/C,SAAS,MAAzB,SAAgCgC,YA2B7BgB,iBAAKvB,G,SClFPwB,EAAuB,SAACZ,EAAMa,EAAOC,GAChDC,IAAaf,GAAM,CACjBc,QAASD,EACTG,YAAaF,EACbG,SAAU,KC6FCC,EA/ED,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEcF,mBAAS,IAFvB,mBAEXG,EAFW,KAEDC,EAFC,OAGgBJ,oBAAS,GAHzB,mBAGXK,EAHW,KAGAC,EAHA,KAalB,IAAMlE,EAAYC,qBAAWC,KAEvBiE,EAAY,uCAAG,4BAAAC,EAAA,yDACbC,EAAmB,CAAER,QAAOE,YACzB,KAALF,GAAwB,KAARE,EAFD,gBAGjBV,EAAqB,QAAD,qCAHH,+CAKVrD,EAAUsE,YAAYD,IALZ,2CAAH,qDASlB,OACE,mCACE,qBAAKhE,UAAU,kBAAf,SACE,eAACkE,EAAA,EAAD,CAAOlE,UAAU,wBAAwBmE,UAAW,EAApD,UACE,qBAAKnE,UAAU,cAAf,SACE,oBAAIA,UAAU,aAAd,yCAGF,gCACE,8BACE,cAAC,EAAD,CACEsC,WAAS,EACTF,KAAK,QACLgC,UAAQ,EACRhE,MAAM,QACN0B,SAlCd,SAA2BH,EAAOC,GAChCA,EAAcD,IAjBU,SAAC6B,GAG3B,MADS,0JACCa,KAAKC,OAAOd,GAAOe,eAevBC,CAAa7C,GAGfkC,GAAa,GAFbA,GAAa,IAgCHlC,MAAO6B,EACP5B,cAAe6B,EACfzD,UAAU,+BAGb4D,EACC,sBAAM5D,UAAU,aAAhB,0CACE,QAEN,8BACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,EAAD,CACEoC,KAAK,WACLhC,MAAM,WACNyB,YAAY,GACZH,KAAK,WACL1B,UAAU,2BACVoE,UAAQ,EACRzC,MAAO+B,EACP9B,cAAe+B,QAKrB,qBAAK3D,UAAU,qCAAf,SACE,cAACG,EAAA,QAAD,CACEH,UAAU,sBACVK,QAASyD,EACT1D,MAAM,oB,OC3DLqE,MAtBf,WACE,OACE,cAAC,IAAD,UACG,SAAC9E,GAAD,OAEC,aADA,CACA,gBACGA,EAAU+E,cACT,cAAC,IAAD,UACE,cAAC,IAAD,CAAOpD,KAAK,IAAIqD,OAAQ,SAACjF,GAAD,OAAW,cAAC,EAAD,eAAcA,SAGnD,cAAC,IAAD,UACE,cAAC,IAAD,CAAO4B,KAAK,IAAIqD,OAAQ,SAACjF,GAAD,OAAW,cAAC,EAAD,eAAWA,eCP7CkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iCCPDQ,EAAgB,yBCGhBC,EAAe,CAAEC,MAAO,GAatBC,EAXS,eAACC,EAAD,uDAASH,EAAcI,EAAvB,8CACtBC,YAAQF,GAAO,SAACG,GACd,OAAQF,EAAOtD,MACb,KAAKiD,EACHO,EAAML,OAAS,O,QCFVD,EAAe,CAAEC,MAAO,EAAGM,cAAe,KAAMC,SAAU,MAqBxDC,EAnBK,eAACN,EAAD,uDAASH,EAAcI,EAAvB,8CAClBC,YAAQF,GAAO,SAACG,GACd,OAAQF,EAAOtD,MACb,KAAKiD,gBACHO,EAAML,OAAS,EACf,MACF,KAAKS,gBACHJ,EAAMC,cAAgBH,EAAOO,IAAIC,MACjCN,EAAME,SAAWJ,EAAOO,IAAIH,SAC5B,MACF,KAAKK,0BACHP,EAAME,SAAWJ,EAAOO,IAAIH,SAC5BF,EAAMC,cAAgBH,EAAOO,IAAIC,W,QCf5BZ,EAAe,CAAEc,SAAU,GAAIC,aAAc,IAgB3CC,EAdgB,eAACb,EAAD,uDAASH,EAAcI,EAAvB,8CAC7BC,YAAQF,GAAO,SAACG,GACd,OAAQF,EAAOtD,MACb,KAAKmE,0BACHX,EAAMQ,SAAWV,EAAOO,IAAIO,MAC5B,MACF,KAAKC,+BACHb,EAAMS,aAAeX,EAAOO,IAAIO,WCLzBE,GALKC,YAAgB,CAClCnB,kBACAO,cACAO,2B,uCCNIM,GAAW,SAACC,EAAKC,GAAN,OAAeC,KAAMC,KAAKH,EAAKC,IAgB1CG,GAAU,SAACJ,GAAD,IAAMC,EAAN,uDAAa,KAAb,OACdC,KAAMG,IAAIL,EAAK,CACbM,OAAQL,KAwBZC,KAAMK,aAAaC,SAASC,KAC1B,SAACD,GAAD,OAAcA,IADhB,+BAAAtD,EAAA,MAEE,WAAOwD,GAAP,eAAAxD,EAAA,6DACMyD,EAAW,GAEa,MAA1BD,EAAMF,SAASI,QACW,MAA1BF,EAAMF,SAASI,QACW,MAA1BF,EAAMF,SAASI,QACW,MAA1BF,EAAMF,SAASI,SAEfD,EAAW,CACTC,OAAQF,EAAMF,SAASI,OACvBvE,QAASqE,EAAMF,SAASP,KAAKY,OAAOZ,OAV1C,kBAaSU,GAbT,2CAFF,uD,OCvCIG,EAAQ,IAJVtC,G,GAAAA,cACAW,G,GAAAA,cACA4B,G,GAAAA,YACAC,G,GAAAA,gBAIWC,GAAe,SAAC7B,GAAD,MAAU,CAAE7D,KAAM4D,GAAeC,QAChD8B,GAAa,SAACC,GAAD,MAAU,CAAE5F,KAAMwF,GAAaI,Q,YCHxCC,I,YAwBAC,I,YAYAC,IApCV,SAAUF,GAAV,oFAQc,OARYG,EAA1B,EAA0BA,QAA1B,qDAEG5E,EAAoB4E,EAApB5E,MAAOE,EAAa0E,EAAb1E,SACT2E,EAAY,CAChB7E,QACAE,YALG,kBAQoB4E,aAAK1B,GARzB,qDAQ+CyB,GAR/C,UASqB,OADlBhB,EARH,QASUI,OATV,iBAWD,OADMxB,EAAMoB,EAVX,UAWKkB,aAAIT,GAAa7B,EAAIa,OAX1B,QAYD9D,EAAqB,UAAD,uCAZnB,gCAqBH,OArBG,0BAeHA,EACE,QADkB,oDAKpBwF,QAAQC,IAAR,YApBG,UAqBGF,aAAIR,GAAW,EAAD,KArBjB,uDAwBA,SAAUG,KAAV,yEAGc,MAHd,+EAGoBI,aAAKrB,GAHzB,wEAIqB,OADlBI,EAHH,QAIUI,OAJV,gBAMD,OADMxB,EAAMoB,EALX,SAMKkB,aAAIT,GAAa7B,EAAIa,OAN1B,+BASH,OATG,oCASGyB,aAAIR,GAAW,EAAD,KATjB,uDAYA,SAAUI,KAAV,iEACL,OADK,SACCO,aAAWrD,gBAAe4C,IAD3B,OAEL,OAFK,SAECS,aAAWb,kBAAiBK,IAF7B,wC,yBCzBUS,I,YAYAC,I,YAYAC,I,YAeAC,IAvCV,SAAUH,GAAV,4EAGc,OAHd,EAA0BP,QAA1B,2EAGoBE,aAAKrB,GAHzB,oEAIqB,OADlBI,EAHH,QAIUI,OAJV,iBAMD,OADMxB,EAAMoB,EALX,UAMKkB,aAAIQ,aAAqB9C,EAAIa,OANlC,gCASH,OATG,oCASGyB,aAAIS,aAAmB,EAAD,KATzB,uDAYA,SAAUJ,GAAV,4EAGc,OAHd,EAA8BR,QAA9B,+EAGoBE,aAAKrB,GAHzB,wEAIqB,OADlBI,EAHH,QAIUI,OAJV,iBAMD,OADMxB,EAAMoB,EALX,UAMKkB,aAAIU,aAAyBhD,EAAIa,OANtC,gCASH,OATG,oCASGyB,aAAIW,aAAuB,EAAD,KAT7B,uDAYA,SAAUL,GAAV,gFAKc,OALeT,EAA7B,EAA6BA,QAA7B,6DAELI,QAAQC,IAAIL,EAAZ,WACMe,EAAU,CAAE3C,MAAO4B,GAHpB,kBAKoBE,aAAK1B,GALzB,6DAK+CuC,GAL/C,UAMqB,OADlB9B,EALH,QAMUI,OANV,iBAQD,OADMxB,EAAMoB,EAPX,UAQKkB,aAAIa,aAAoBnD,EAAIa,OARjC,QASD9D,EAAqB,UAAD,oCATnB,gCAYH,OAZG,oCAYGuF,aAAIc,aAAkB,EAAD,KAZxB,uDAeA,SAAUP,KAAV,iEACL,OADK,SACCJ,aAAWY,kBAAiBX,IAD7B,OAEL,OAFK,SAECD,aAAWa,uBAAsBX,IAFlC,OAGL,OAHK,SAGCF,aAAWc,sBAAqBX,IAHjC,wC,gBCnDkBY,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,aAAI,CAACvB,KAAYW,OADV,wC,aC4GAa,GA1GF,SAACjK,GAAW,IAAD,EACI6D,mBAAS,CACjCmB,eAAe,EACfkF,KAAM,GACNC,YAAY,KAJQ,mBACfpE,EADe,KACRqE,EADQ,KAOhBC,EAAmBC,aAAY,SAACvE,GAAD,OAAWA,EAAMM,eAC9CF,EAA4BkE,EAA5BlE,cAAeC,EAAaiE,EAAbjE,SACjBmE,EAAWC,cACX5J,EAAM,uCAAG,sBAAAyD,EAAA,sDACboG,aAAaC,QACbN,EAAS,2BACJrE,GADG,IAENf,eAAe,EACfkF,KAAM,GACNC,YAAY,MAND,2CAAH,qDAaZQ,qBAAU,WACJxE,GAA8B,KAAbA,GACnBiE,EAAS,2BACJrE,GADG,IAENoE,YAAahE,KAGXC,GACFwE,EAAqBxE,IAEdA,GACTwE,EAAqBxE,KAGtB,CAACD,EAAeC,IAEnBuE,qBAAU,WACR,IAAME,EAAaJ,aAAaK,QAAb,SACbC,EAAiBN,aAAaK,QAAb,iBACnBD,IAAezE,IACjBgE,EAAS,2BAAKrE,GAAN,IAAaoE,YAAaU,KAClCxD,KAAM2D,SAASC,QAAQC,OAAO1E,MAA9B,UAAyCqE,GACzCN,EJzCoC,CACxC7H,KAAMyF,MI0CA4C,IAAmBhF,EAAMf,eAC3BoF,EAAS,2BACJrE,GADG,IAENf,eAAe,OAIlB,IAEH,IAAM4F,EAAuB,SAACV,GACxBA,EACFiB,EAAWjB,GAEXE,EAAS,2BACJrE,GADG,IAENf,eAAe,EACfkF,KAAM,GACNC,YAAY,OAIZgB,EAAU,uCAAG,WAAO/D,GAAP,eAAA/C,EAAA,sDACjBgD,KAAM2D,SAASC,QAAQC,OAAO1E,MAA9B,UAAyCL,GACrCA,GACF2C,QAAQC,IAAI3B,EAAZ,QAEAgD,EAAS,2BACJrE,GADG,IAENf,eAAe,EACfkF,KAAM9C,KAERqD,aAAaW,QAAb,QAA8BjF,GAC9BsE,aAAaW,QAAb,iBAAsC,KAEhClB,EAAO,GACbE,EAAS,2BACJrE,GADG,IAENf,eAAe,EACfmF,YAAa,GACbD,WAlBa,2CAAH,sDAuBVmB,EAAiB,2BAClBtF,GADkB,IAErBnF,OAAQA,EACRuK,WAAYA,EACZ5G,YA3EkB,SAACkD,GACnB8C,EJrBqC,CAAE7H,KAAMiD,GAAe+C,QIqBvCjB,OA4EvB,OACE,cAAC,IAAD,CAAcxF,MAAOoJ,EAArB,SAAyCrL,EAAMsL,YC5F7CC,GAAiBC,cACjBC,GAAQC,YAAY1E,GAAa2E,YAAgBJ,KACvDA,GAAeK,IAAI7B,IACnB8B,IAAS5G,OACP,cAAC,IAAM6G,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,EAAD,YAKRM,SAASC,eAAe,SAM1B9G,K,gCChCA,iHAEa/E,EAAc8L,wBAAc,CACvCjH,eAAe,EACfkF,KAAM,GACNC,YAAY,GACZ5F,YAAa,aACb3D,OAAQ,eAEGsL,EAAe/L,EAAYgM,SAC3BC,EAAejM,EAAYkM,U,gCCVxC,uPAAO,IAAM1G,EAAgB,qBAChBW,EAAgB,qBAChB4B,EAAc,mBACdC,EAAkB,uBAClB1B,EAA0B,gC,gCCJvC,0iBAAO,IAAMd,EAAgB,qBAEhBiE,EAAkB,uBAClB/C,EAA0B,+BAC1ByF,EAAwB,6BAExBzC,EAAuB,4BACvB9C,EAA+B,oCAC/BwF,EAA6B,kCAE7BzC,EAAsB,2BACtB0C,EAA8B,mCAC9BC,EAA4B,kC,wVCFrCxE,EAAQ,IATVpB,E,EAAAA,wBACAyF,E,EAAAA,sBACA1C,E,EAAAA,gBACA7C,E,EAAAA,6BACA8C,E,EAAAA,qBACA0C,E,EAAAA,2BACAzC,E,EAAAA,oBACA0C,E,EAAAA,4BACAC,E,EAAAA,0BAGWC,EAAsB,iBAAO,CAAEhK,KAAMkH,IACrCP,EAAuB,SAAC9C,GAAD,MAAU,CAC5C7D,KAAMmE,EACNN,QAEW+C,EAAqB,SAAChB,GAAD,MAAU,CAC1C5F,KAAM4J,EACNhE,QAGWqE,EAA0B,iBAAO,CAAEjK,KAAMmH,IACzCN,EAA2B,SAAChD,GAAD,MAAU,CAChD7D,KAAMqE,EACNR,QAEWiD,EAAyB,SAAClB,GAAD,MAAU,CAC9C5F,KAAM6J,EACNjE,QAGWsE,EAAqB,SAAClE,GAAD,MAAc,CAC9ChG,KAAMoH,EACNpB,YAEWgB,EAAsB,SAACnD,GAAD,MAAU,CAC3C7D,KAAM8J,EACNjG,QAEWoD,EAAoB,SAACrB,GAAD,MAAU,CACzC5F,KAAM+J,EACNnE,S,gCC1CF,sCAKA,SAAS7H,EAAUT,GAAQ,IAEvBgC,EAOEhC,EAPFgC,KACA1B,EAMEN,EANFM,UACAK,EAKEX,EALFW,QACA6B,EAIExC,EAJFwC,SACA9B,EAGEV,EAHFU,MACAmM,EAEE7M,EAFF6M,IACAC,EACE9M,EADF8M,wBAEF,OACE,mCACE,yBACEpK,KAAI,SACJV,KAAMA,GAAI,SACV1B,UAAS,UAAKA,EAAL,kBACTK,QAASA,EACT6B,SAAUA,IAAY,EALxB,UAOGqK,GAAO,qBAAKvM,UAAU,mBAAmBuM,IAAKA,EAAKE,IAAG,QACvD,cAAC,IAAD,CAAUzM,UAAWwM,EAAyBpM,MAAOA,SAK7DD,EAAUuM,aAAe,CACvBrM,SAAS,EACTqB,MAAM,EACN1B,WAAW,EACXkC,UAAU,EACV9B,OAAO,GAeMD,a,gCClDf,oCAKMqC,EAAW,SAAC,GAAmC,IAAjCxC,EAAgC,EAAhCA,UAAWI,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACpC,OACE,cAAC,IAAD,CACEA,QAASA,EACTL,UAAS,+BAA0BA,GAFrC,SAIGI,KAKPoC,EAASkK,aAAe,CAAE1M,WAAW,GAOtB+C,mBAAKP,K","file":"static/js/main.9687c526.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport './styles.css';\r\nimport AppButton from '../AppButton';\r\nimport { AuthContext } from '../auth/authContext';\r\n\r\nfunction TopBar(props) {\r\n  const authState = useContext(AuthContext);\r\n  return (\r\n    <AppBar position='static' className='top-bar-container'>\r\n      <Toolbar variant='dense'>\r\n        <div className='top-bar-dropdowns-container'>\r\n          <div className='d-flex'></div>\r\n        </div>\r\n        <AppButton label='Logout' onClick={() => authState.logout()} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nTopBar.propTypes = {};\r\n\r\nexport default TopBar;\r\n","import { Drawer } from '@material-ui/core';\r\nimport React, { lazy } from 'react';\r\nimport { Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport TopBar from '../TopBar';\r\nimport './styles.css';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nconst ContentHomepage = lazy(() => import(`../ContentHomepage`));\r\n// const NotFoundPage = lazy(() => import(`../NotFoundPage`));\r\n// import PropTypes from 'prop-types';\r\n\r\nfunction Homepage(props) {\r\n  //   const {} = props;\r\n  const list = () => (\r\n    <div role='presentation'>\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <TopBar />\r\n      <hr className='m-0'></hr>\r\n      <Drawer variant='permanent' open={false} className={`drawer-close`}>\r\n        {list()}\r\n      </Drawer>\r\n      <div className='homepage-container'>\r\n        <Switch>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Route path='/homepage' component={ContentHomepage} />\r\n            <Route path='/' component={ContentHomepage} />\r\n          </Suspense>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHomepage.propTypes = {};\r\n\r\nexport default Homepage;\r\n","/**\r\n *\r\n * AppTextField\r\n *\r\n */\r\n\r\nimport React, { memo } from 'react';\r\nimport AppLabel from '../AppLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport './styles.css';\r\n\r\nconst AppTextField = ({\r\n  onFocus,\r\n  name,\r\n  value,\r\n  stateToUpdate,\r\n  label,\r\n  className,\r\n  placeholder,\r\n  onChange,\r\n  adornmentEnd = false,\r\n  size,\r\n  mainDivClassName,\r\n  disabled,\r\n  id,\r\n  type,\r\n  onBlur,\r\n  autoFocus,\r\n}) => {\r\n  const handleChangeFields = (value, stateToUpdate) => {\r\n    if (onChange) {\r\n      onChange(value, stateToUpdate);\r\n    } else {\r\n      stateToUpdate(value);\r\n    }\r\n  };\r\n  return (\r\n    <div className={mainDivClassName}>\r\n      <AppLabel className='app-text-heading' label={label} />\r\n      <TextField\r\n        autoFocus={autoFocus && autoFocus}\r\n        name={name}\r\n        onFocus={onFocus}\r\n        className={`app-text-field-style ${className}`}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(e) => handleChangeFields(e.target.value, stateToUpdate)}\r\n        id={id ? id : `outlined-basic`}\r\n        placeholder={placeholder}\r\n        size={size}\r\n        variant='outlined'\r\n        type={type && type}\r\n        onBlur={onBlur && onBlur}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position='end'>{adornmentEnd}</InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nAppTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  onFocus: PropTypes.func,\r\n  value: PropTypes.any.isRequired,\r\n  stateToUpdate: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.any,\r\n  placeholder: PropTypes.string,\r\n  adornmentEnd: PropTypes.any,\r\n  size: PropTypes.any,\r\n  mainDivClassName: PropTypes.any,\r\n  name: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  onBlur: PropTypes.any,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport default memo(AppTextField);\r\n","import { notification } from 'antd';\r\n\r\nexport const notificationWithIcon = (type, title, message) => {\r\n  notification[type]({\r\n    message: title,\r\n    description: message,\r\n    duration: 2,\r\n  });\r\n};\r\n","import React, { useContext, useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport AppButton from '../AppButton';\r\nimport { Paper } from '@material-ui/core';\r\nimport './styles.css';\r\nimport AppTextField from '../AppTextField';\r\nimport { AuthContext } from '../auth/authContext';\r\nimport { notificationWithIcon } from '../../utils/notification';\r\n\r\nexport const isValidEmail = (email) => {\r\n  // eslint-disable-next-line\r\n  let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nexport const isValidPassword = (password) => {\r\n  const pass = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n  return pass.test(password);\r\n};\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMail, setErrorMail] = useState(false);\r\n\r\n  function handleEmailChange(value, stateToUpdate) {\r\n    stateToUpdate(value);\r\n    if (isValidEmail(value)) {\r\n      setErrorMail(false);\r\n    } else {\r\n      setErrorMail(true);\r\n    }\r\n  }\r\n  const authState = useContext(AuthContext);\r\n\r\n  const handleSignIn = async () => {\r\n    const loginCredentials = { email, password };\r\n    if (email === `` || password === ``) {\r\n      notificationWithIcon('error', `Error`, `Please add in both fields`);\r\n    } else {\r\n      return authState.handleLogin(loginCredentials);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='login-container'>\r\n        <Paper className='login-inner-container' elevation={3}>\r\n          <div className='form-header'>\r\n            <h1 className='main-title'>Login to Image Portal App</h1>\r\n            {/* <p className='sub-title'>Login</p> */}\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <AppTextField\r\n                autoFocus\r\n                type='email'\r\n                required\r\n                label='Email'\r\n                onChange={handleEmailChange}\r\n                value={email}\r\n                stateToUpdate={setEmail}\r\n                className='login-text-field-styling'\r\n              />\r\n            </div>\r\n            {errorMail ? (\r\n              <span className='error-text'>Please enter a proper email.</span>\r\n            ) : null}\r\n          </div>\r\n          <div>\r\n            <div className='login-password-main'>\r\n              <AppTextField\r\n                type='password'\r\n                label='Password'\r\n                placeholder=''\r\n                name='password'\r\n                className='login-text-field-styling'\r\n                required\r\n                value={password}\r\n                stateToUpdate={setPassword}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='d-flex align-items-end flex-column'>\r\n            <AppButton\r\n              className='btn-theme mb-2 mt-5'\r\n              onClick={handleSignIn}\r\n              label='Login'\r\n            ></AppButton>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {};\r\n\r\nexport default Login;\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport { AuthConsumer } from './components/auth/authContext';\r\nimport HomePage from './components/Homepage/';\r\nimport Login from './components/Login/';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthConsumer>\r\n      {(authState) => (\r\n        // <Router>\r\n        <div>\r\n          {authState.authenticated ? (\r\n            <Switch>\r\n              <Route path='/' render={(props) => <HomePage {...props} />} />\r\n            </Switch>\r\n          ) : (\r\n            <Switch>\r\n              <Route path='/' render={(props) => <Login {...props} />} />\r\n            </Switch>\r\n          )}\r\n        </div>\r\n        // {/* </Router> */}\r\n      )}\r\n    </AuthConsumer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const DEFAULT_CONST = 'Homepage/DEFAULT_CONST';\r\n","import produce from 'immer';\r\nimport { DEFAULT_CONST } from './constants';\r\n\r\nexport const initialState = { count: 0 };\r\n\r\nconst homePageReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case DEFAULT_CONST:\r\n        draft.count += 1;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default homePageReducer;\r\n","import produce from 'immer';\r\nimport {\r\n  DEFAULT_CONST,\r\n  FETCH_USER_INFO_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initialState = { count: 0, incomingToken: null, userInfo: null };\r\n\r\nconst authReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case DEFAULT_CONST:\r\n        draft.count += 1;\r\n        break;\r\n      case LOGIN_SUCCESS:\r\n        draft.incomingToken = action.res.token;\r\n        draft.userInfo = action.res.userInfo;\r\n        break;\r\n      case FETCH_USER_INFO_SUCCESS:\r\n        draft.userInfo = action.res.userInfo;\r\n        draft.incomingToken = action.res.token;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default authReducer;\r\n","import produce from 'immer';\r\nimport {\r\n  FETCH_LIST_DATA_SUCCESS,\r\n  FETCH_USER_LIST_DATA_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initialState = { listData: [], userListData: [] };\r\n\r\nconst contentHomepageReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case FETCH_LIST_DATA_SUCCESS:\r\n        draft.listData = action.res.items;\r\n        break;\r\n      case FETCH_USER_LIST_DATA_SUCCESS:\r\n        draft.userListData = action.res.items;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default contentHomepageReducer;\r\n","import { combineReducers } from 'redux';\r\nimport homePageReducer from '../components/Homepage/reducer';\r\nimport authReducer from '../components/auth/reducer';\r\nimport contentHomepageReducer from '../components/ContentHomepage/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  homePageReducer,\r\n  authReducer,\r\n  contentHomepageReducer,\r\n});\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst postUtil = (url, data) => axios.post(url, data);\r\n\r\nconst putUtil = (url, data) =>\r\n  axios({\r\n    method: `put`,\r\n    url,\r\n    data,\r\n  });\r\n\r\nconst patchUtil = (url, data) =>\r\n  axios({\r\n    method: `patch`,\r\n    url,\r\n    data,\r\n  });\r\n\r\nconst getUtil = (url, data = null) =>\r\n  axios.get(url, {\r\n    params: data,\r\n  });\r\n\r\nconst deleteUtil = (url, data = null) =>\r\n  axios.delete(url, {\r\n    params: data,\r\n  });\r\n\r\nconst deleteUtilWithBody = (url, data) =>\r\n  axios({\r\n    method: `delete`,\r\n    url,\r\n    data,\r\n  });\r\n\r\nexport {\r\n  postUtil,\r\n  getUtil,\r\n  putUtil,\r\n  patchUtil,\r\n  deleteUtil,\r\n  deleteUtilWithBody,\r\n};\r\n\r\naxios.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    let errorMsg = {};\r\n    if (\r\n      error.response.status === 401 ||\r\n      error.response.status === 400 ||\r\n      error.response.status === 404 ||\r\n      error.response.status === 500\r\n    ) {\r\n      errorMsg = {\r\n        status: error.response.status,\r\n        message: error.response.data.result.data,\r\n      };\r\n    }\r\n    return errorMsg;\r\n  }\r\n);\r\n","const {\r\n  DEFAULT_CONST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  FETCH_USER_INFO,\r\n} = require('./constants');\r\n\r\nexport const loginAction = (payload) => ({ type: DEFAULT_CONST, payload });\r\nexport const loginSuccess = (res) => ({ type: LOGIN_SUCCESS, res });\r\nexport const loginError = (err) => ({ type: LOGIN_ERROR, err });\r\n\r\nexport const fetchUserInfoAction = () => ({\r\n  type: FETCH_USER_INFO,\r\n});\r\nexport const fetchUserInfoSuccess = (res) => ({ type: LOGIN_SUCCESS, res });\r\n","import { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { getUtil, postUtil } from '../../utils/api';\r\nimport { notificationWithIcon } from '../../utils/notification';\r\nimport { loginError, loginSuccess } from './actions';\r\nimport { DEFAULT_CONST, FETCH_USER_INFO } from './constants';\r\n\r\nexport function* loginFunction({ payload }) {\r\n  const requestURL = `https://image-share-portal.herokuapp.com/api/login`;\r\n  const { email, password } = payload;\r\n  const loginData = {\r\n    email,\r\n    password,\r\n  };\r\n  try {\r\n    const response = yield call(postUtil, requestURL, loginData);\r\n    if (response.status === 200) {\r\n      const res = response;\r\n      yield put(loginSuccess(res.data));\r\n      notificationWithIcon('success', `Successful`, `Logged In Successfully`);\r\n    }\r\n  } catch (err) {\r\n    notificationWithIcon(\r\n      'error',\r\n      `Error`,\r\n      `Wrong credentials or user does not exist`\r\n    );\r\n    console.log(`thissss?`);\r\n    yield put(loginError(err));\r\n  }\r\n}\r\nexport function* fetchUserInfo() {\r\n  const requestURL = `https://image-share-portal.herokuapp.com/api/fetchUserInfo`;\r\n  try {\r\n    const response = yield call(getUtil, requestURL);\r\n    if (response.status === 200) {\r\n      const res = response;\r\n      yield put(loginSuccess(res.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(loginError(err));\r\n  }\r\n}\r\nexport function* authSaga() {\r\n  yield takeLatest(DEFAULT_CONST, loginFunction);\r\n  yield takeLatest(FETCH_USER_INFO, fetchUserInfo);\r\n}\r\n","import { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { getUtil, postUtil } from '../../utils/api';\r\nimport { notificationWithIcon } from '../../utils/notification';\r\nimport {\r\n  fetchListDataError,\r\n  fetchListDataSuccess,\r\n  fetchUserListDataError,\r\n  fetchUserListDataSuccess,\r\n  postListDataError,\r\n  postListDataSuccess,\r\n} from './actions';\r\nimport {\r\n  FETCH_LIST_DATA,\r\n  FETCH_USER_LIST_DATA,\r\n  POST_USER_LIST_DATA,\r\n} from './constants';\r\n\r\nexport function* fetchListData({ payload }) {\r\n  const requestURL = `https://image-share-portal.herokuapp.com/api/imageData`;\r\n  try {\r\n    const response = yield call(getUtil, requestURL);\r\n    if (response.status === 200) {\r\n      const res = response;\r\n      yield put(fetchListDataSuccess(res.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(fetchListDataError(err));\r\n  }\r\n}\r\nexport function* fetchUserListData({ payload }) {\r\n  const requestURL = `https://image-share-portal.herokuapp.com/api/fetchUserData`;\r\n  try {\r\n    const response = yield call(getUtil, requestURL);\r\n    if (response.status === 200) {\r\n      const res = response;\r\n      yield put(fetchUserListDataSuccess(res.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(fetchUserListDataError(err));\r\n  }\r\n}\r\nexport function* postUserListData({ payload }) {\r\n  const requestURL = `https://image-share-portal.herokuapp.com/api/postUserImage`;\r\n  console.log(payload, `payload`);\r\n  const postObj = { items: payload };\r\n  try {\r\n    const response = yield call(postUtil, requestURL, postObj);\r\n    if (response.status === 200) {\r\n      const res = response;\r\n      yield put(postListDataSuccess(res.data));\r\n      notificationWithIcon('success', `Successful`, `Posted Successfully`);\r\n    }\r\n  } catch (err) {\r\n    yield put(postListDataError(err));\r\n  }\r\n}\r\nexport function* contentHomepageSaga() {\r\n  yield takeLatest(FETCH_LIST_DATA, fetchListData);\r\n  yield takeLatest(FETCH_USER_LIST_DATA, fetchUserListData);\r\n  yield takeLatest(POST_USER_LIST_DATA, postUserListData);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport { authSaga } from '../components/auth/authSaga';\r\nimport { contentHomepageSaga } from '../components/ContentHomepage/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([authSaga(), contentHomepageSaga()]);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { AuthProvider } from './authContext';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUserInfoAction, loginAction } from './actions';\r\n\r\nconst Auth = (props) => {\r\n  const [state, setState] = useState({\r\n    authenticated: false,\r\n    user: {},\r\n    accessToken: ``,\r\n  });\r\n\r\n  const authReducerState = useSelector((state) => state.authReducer);\r\n  const { incomingToken, userInfo } = authReducerState;\r\n  const dispatch = useDispatch();\r\n  const logout = async () => {\r\n    localStorage.clear();\r\n    setState({\r\n      ...state,\r\n      authenticated: false,\r\n      user: {},\r\n      accessToken: ``,\r\n    });\r\n  };\r\n\r\n  const handleLogin = (params) => {\r\n    dispatch(loginAction(params));\r\n  };\r\n  useEffect(() => {\r\n    if (incomingToken && incomingToken !== ``) {\r\n      setState({\r\n        ...state,\r\n        accessToken: incomingToken,\r\n      });\r\n\r\n      if (userInfo) {\r\n        handleAuthentication(userInfo);\r\n      }\r\n    } else if (userInfo) {\r\n      handleAuthentication(userInfo);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [incomingToken, userInfo]);\r\n\r\n  useEffect(() => {\r\n    const localToken = localStorage.getItem(`token`);\r\n    const isAutheticated = localStorage.getItem(`authenticated`);\r\n    if (localToken && !userInfo) {\r\n      setState({ ...state, accessToken: localToken });\r\n      axios.defaults.headers.common.token = `${localToken}`;\r\n      dispatch(fetchUserInfoAction());\r\n    }\r\n    if (isAutheticated && !state.authenticated) {\r\n      setState({\r\n        ...state,\r\n        authenticated: true,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleAuthentication = (user) => {\r\n    if (user) {\r\n      setSession(user);\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        authenticated: false,\r\n        user: {},\r\n        accessToken: ``,\r\n      });\r\n    }\r\n  };\r\n  const setSession = async (data) => {\r\n    axios.defaults.headers.common.token = `${incomingToken}`;\r\n    if (incomingToken) {\r\n      console.log(data, `data`);\r\n\r\n      setState({\r\n        ...state,\r\n        authenticated: true,\r\n        user: data,\r\n      });\r\n      localStorage.setItem(`token`, incomingToken);\r\n      localStorage.setItem(`authenticated`, true);\r\n    } else {\r\n      const user = {};\r\n      setState({\r\n        ...state,\r\n        authenticated: false,\r\n        accessToken: '',\r\n        user,\r\n      });\r\n    }\r\n  };\r\n\r\n  const authProviderValue = {\r\n    ...state,\r\n    logout: logout,\r\n    setSession: setSession,\r\n    handleLogin: handleLogin,\r\n  };\r\n  return (\r\n    <AuthProvider value={authProviderValue}>{props.children}</AuthProvider>\r\n  );\r\n};\r\n\r\nAuth.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './rootSaga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Auth from './components/auth/Auth';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Auth>\r\n          <App />\r\n        </Auth>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  authenticated: false,\r\n  user: {},\r\n  accessToken: ``,\r\n  handleLogin: () => {},\r\n  logout: () => {},\r\n});\r\nexport const AuthConsumer = AuthContext.Consumer;\r\nexport const AuthProvider = AuthContext.Provider;\r\n","export const DEFAULT_CONST = 'auth/DEFAULT_CONST';\r\nexport const LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'auth/LOGIN_ERROR';\r\nexport const FETCH_USER_INFO = 'auth/FETCH_USER_INFO';\r\nexport const FETCH_USER_INFO_SUCCESS = 'auth/FETCH_USER_INFO_SUCCESS';\r\n","export const DEFAULT_CONST = 'auth/DEFAULT_CONST';\r\n\r\nexport const FETCH_LIST_DATA = 'auth/FETCH_LIST_DATA';\r\nexport const FETCH_LIST_DATA_SUCCESS = 'auth/FETCH_LIST_DATA_SUCCESS';\r\nexport const FETCH_LIST_DATA_ERROR = 'auth/FETCH_LIST_DATA_ERROR';\r\n\r\nexport const FETCH_USER_LIST_DATA = 'auth/FETCH_USER_LIST_DATA';\r\nexport const FETCH_USER_LIST_DATA_SUCCESS = 'auth/FETCH_USER_LIST_DATA_SUCCESS';\r\nexport const FETCH_USER_LIST_DATA_ERROR = 'auth/FETCH_USER_LIST_DATA_ERROR';\r\n\r\nexport const POST_USER_LIST_DATA = 'auth/POST_USER_LIST_DATA';\r\nexport const POST_USER_LIST_DATA_SUCCESS = 'auth/POST_USER_LIST_DATA_SUCCESS';\r\nexport const POST_USER_LIST_DATA_ERROR = 'auth/POST_USER_LIST_DATA_ERROR';\r\n","const {\r\n  FETCH_LIST_DATA_SUCCESS,\r\n  FETCH_LIST_DATA_ERROR,\r\n  FETCH_LIST_DATA,\r\n  FETCH_USER_LIST_DATA_SUCCESS,\r\n  FETCH_USER_LIST_DATA,\r\n  FETCH_USER_LIST_DATA_ERROR,\r\n  POST_USER_LIST_DATA,\r\n  POST_USER_LIST_DATA_SUCCESS,\r\n  POST_USER_LIST_DATA_ERROR,\r\n} = require('./constants');\r\n\r\nexport const fetchListDataAction = () => ({ type: FETCH_LIST_DATA });\r\nexport const fetchListDataSuccess = (res) => ({\r\n  type: FETCH_LIST_DATA_SUCCESS,\r\n  res,\r\n});\r\nexport const fetchListDataError = (err) => ({\r\n  type: FETCH_LIST_DATA_ERROR,\r\n  err,\r\n});\r\n\r\nexport const fetchUserListDataAction = () => ({ type: FETCH_USER_LIST_DATA });\r\nexport const fetchUserListDataSuccess = (res) => ({\r\n  type: FETCH_USER_LIST_DATA_SUCCESS,\r\n  res,\r\n});\r\nexport const fetchUserListDataError = (err) => ({\r\n  type: FETCH_USER_LIST_DATA_ERROR,\r\n  err,\r\n});\r\n\r\nexport const postListDataAction = (payload) => ({\r\n  type: POST_USER_LIST_DATA,\r\n  payload,\r\n});\r\nexport const postListDataSuccess = (res) => ({\r\n  type: POST_USER_LIST_DATA_SUCCESS,\r\n  res,\r\n});\r\nexport const postListDataError = (err) => ({\r\n  type: POST_USER_LIST_DATA_ERROR,\r\n  err,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css';\r\nimport AppLabel from '../AppLabel';\r\n\r\nfunction AppButton(props) {\r\n  const {\r\n    name,\r\n    className,\r\n    onClick,\r\n    disabled,\r\n    label,\r\n    src,\r\n    appButtonLabelClassName,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <button\r\n        type={`button`}\r\n        name={name || `button`}\r\n        className={`${className} app-btn-theme`}\r\n        onClick={onClick}\r\n        disabled={disabled || false}\r\n      >\r\n        {src && <img className='app-button-image' src={src} alt={`...`} />}\r\n        <AppLabel className={appButtonLabelClassName} label={label} />\r\n      </button>\r\n    </>\r\n  );\r\n}\r\nAppButton.defaultProps = {\r\n  onClick: false,\r\n  name: false,\r\n  className: false,\r\n  disabled: false,\r\n  label: false,\r\n};\r\nAppButton.propTypes = {\r\n  name: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  className: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  onClick: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.func,\r\n    PropTypes.string,\r\n  ]),\r\n  disabled: PropTypes.bool,\r\n  label: PropTypes.string,\r\n  appButtonLabelClassName: PropTypes.string,\r\n};\r\n\r\nexport default AppButton;\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './styles.css';\r\n\r\nconst AppLabel = ({ className, label, onClick }) => {\r\n  return (\r\n    <Typography\r\n      onClick={onClick}\r\n      className={`app-label-main-style ${className}`}\r\n    >\r\n      {label}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nAppLabel.defaultProps = { className: false };\r\nAppLabel.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default memo(AppLabel);\r\n"],"sourceRoot":""}